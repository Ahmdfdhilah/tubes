import pygame as pg

_ = False
mini_map = [
    [7, 11, 1, 11, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1],
    [1, _, _, _, _, 1, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, _, _, _, _, _, 1],
    [1, _, _, _, _, 1, 1, 1, _, _, _, _, _, _, _, _, _, 1, 1, 1, 1, _, _, 1, _, _, _, _, _, 1],
    [7, _, _, _, _, _, _, _, _, 14, 14, 14, 14, 14, _, _, 1, 1, 1, _, _, 1, 1, 1, _, _, _, _, _, 1],
    [12, _, _, _, _, _, _, _, _, 13, 1, 1, 1, 14, _, _, _, _, _, _, _, 1, 1, 1, _, _, _, _, _, 1],
    [8, _, _, _, _, _, _, _, _, 9, 1, 1, 1, 14, _, _, _, _, _, _, _, _, _, 1, 1, _, _, _, _, 1],
    [1, _, _, _, _, _, _, _, _, 6, 1, 1, 1, 6, _, _, 1, 1, _, 10, 10, _, _, _, 1, _, _, _, _, 1],
    [1, _, _, _, _, _, _, _, _, 6, 6, 6, 6, 6, _, _, 1, 1, _, 10, 1, 10, 10, _, 1, _, _, _, _, 1],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, 1, _, 4, 1, 1, 1, 10, _, 1, _, _, _, 1],
    [1, _, _, 1, 1, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, 5, 1, 1, 1, 10, _, 1, _, _, _, 1],
    [1, _, _, _, _, 1, 1, _, _, 1, 1, 1, 1, 1, _, _, _, _, _, 10, 1, 1, 10, _, _, 1, _, _, _, 1],
    [1, 1, 1, _, _, 1, 1, _, _, 1, 1, 1, 1, 19, _, _, 23, _, _, 10, 10, 10, _, 1, 1, _, _, _, _, 1],
    [1, 1, 1, _, _, 1, 1, 1, 1, 1, 1, 1, 1, 26, _, _, _, _, _, _, _, _, _, _, 1, _, _, _, _, 1],
    [1, _, _, _, _, 1, _, _, _, _, _, 1, 1, 20, _, _, 27, _, _, _, _, _, _, 1, 1, _, _, _, _, 1],
    [1, _, 1, 1, 1, 1, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, _, _, _, 1, 1, _, _, _, _, 1],
    [1, _, _, _, _, _, _, _, 1, 1, _, _, _, 1, 1, 1, _, _, 15, 15, 15, _, _, 1, 1, _, _, _, _, 1],
    [1, _, _, _, _, _, _, _, 1, 1, 1, _, _, _, 1, 1, _, _, 15, 1, 4, _, _, _, 1, 8, _, _, 12, 1],
    [1, _, _, 1, 1, 1, _, _, 1, 1, 1, _, _, _, _, _, _, _, 15, 1, 9, _, _, _, _, _, _, _, _, 1],
    [1, _, _, 1, 1, 1, _, _, 1, 1, 1, _, _, _, _, _, _, _, 15, 15, 15, _, _, _, _, _, _, _, _, 1],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, 15, _, _, _, _, 1, 1, 1, 1, 1],
    [1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1, 1, _, _, _, _, 1, 1, 1, 1, 1],
    [1, _, _, 23, _, 23, _, _, 23, _, _, 1, 1, 1, _, _, _, _, _, 1, 1, _, _, _, _, _, _, _, _, 1],
    [20, _, _, _, _, _, _, _, _, _, _, 13, 1, 1, _, _, _, _, _, 1, 1, _, _, _, _, _, _, _, _, 1],
    [25, _, _, 27, _, 27, _, _, 27, _, _, 5, 1, 1, _, _, _, _, _, 1, 19, _, _, _, 23, _, 23, _, _, 8],
    [19, _, _, _, _, _, _, _, _, _, _, 1, 1, 1, 1, _, _, _, _, 1, 25, _, _, _, _, _, _, _, _, 12],
    [1, _, _, 23, _, 27, _, _, _, _, _, _, _, _, 1, 1, _, _, _, 1, 20, _, _, _, 27, _, 27, _, _, 1],
    [1, _, _, _, _, _, _, _, 1, 13, _, 9, 1, _, _, _, _, _, _, 1, 1, _, _, _, _, _, _, _, _, 1],
    [1, _, _, _, _, _, _, _, 1, _, _, _, 1, _, _, _, _, _, _, _, _, _, _, _, _, 23, _, 27, _, 1],
    [1, _, _, _, _, _, _, _, 1, 1, 25, 1, 1, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, _, 1],
    [22, 22, 22, 22, 22, 22, 22, 22, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1],           
]

class Map:
    def __init__(self, game):
        self.game = game
        self.mini_map = mini_map
        self.world_map = {}
        self.get_map()

    def get_map(self):
        for j, row in enumerate(self.mini_map):
            for i, value in enumerate(row):
                if value:
                    self.world_map[(i,j)] = value

    def draw(self):
        [pg.draw.rect(self.game.screen, 'white', (pos[0]*100, pos[1]*100, 100, 100), 2)
            for pos in self.world_map]